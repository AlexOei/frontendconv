{"version":3,"sources":["Components/login.js","Components/source.js","Components/convert.js","Components/header.js","Components/footer.js","App.js","reducers/rootReducer.js","index.js"],"names":["AppleLogin","state","login","handleClickApple","e","a","window","MusicKit","configure","developerToken","apiID","appleAuth","app","name","declarativeMarkup","authorize","then","musicUserToken","setState","token","props","addToken","handleClickSpotify","fetch","method","response","text","data","location","className","Button","variant","onClick","this","Component","connect","dispatch","type","payload","Source","handleSelect","convert","hash","document","URL","substring","split","addSpotifyToken","addSource","id","Math","floor","random","addIDA2S","addID","console","log","addAppleToken","Form","Label","ButtonGroup","toggle","ToggleButton","source","idA2S","Converter","url","playName","link","done","valid","handleChange","target","value","handleSubmit","preventDefault","playlistURI","theid","getISRC","newPlay","isrcToken","convToken","appleToken","spotifyToken","playlistURL","theSource","isrc","headers","body","JSON","stringify","json","createPlaylist","responseData","createplaylist","sendAppleISRC","includes","length","Group","Row","Col","xs","Control","size","placeholder","onChange","href","Header","Footer","App","rel","src","class","initState","rootReducer","action","store","createStore","subscribe","getState","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b4661044.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from 'react-bootstrap/';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport apiID from './config.json'\nclass AppleLogin extends Component {\n\n    state = {\n        login:null\n    }\n\n    handleClickApple = async (e) => {\n        let music = window.MusicKit.configure({\n            developerToken:apiID.appleAuth,\n            app: {\n                name: 'My Cool Web App'\n            },\n            declarativeMarkup: true\n        });\n\n        music.authorize().then(musicUserToken=>{\n            this.setState({\n                login:\"Logged In!\"\n            })\n            let token = musicUserToken;\n            this.props.addToken(token);\n\n        })\n\n\n    }\n\n    handleClickSpotify = async (e) => {\n        const response = await fetch('http://playlist-conv-server.herokuapp.com/authorize',{\n            method:'GET',\n        });\n        const data = await response.text()\n        window.location = data;\n\n    }\n\n    render(){\n        return(\n\n            <div className=\"container-login\">\n                <div className=\"text-center\">\n                    <br />\n                    <Button variant=\"dark\" onClick={this.handleClickSpotify} className =\"spotify\" > Login to Spotify</Button>\n                    <Button variant=\"dark\" className=\"applemusic\" onClick={this.handleClickApple} > Login to Apple Music</Button>\n                    <p>{this.state.login}</p>\n                </div>\n\n            </div>\n\n        )\n    }\n}\n\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        addToken: (token) => {dispatch ({type: 'ADD_APPLETOKEN', payload: token})},\n\n    }\n}\n\n\nexport default connect(null, mapDispatchToProps)(AppleLogin);","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { ButtonGroup, ToggleButton, Form } from 'react-bootstrap';\nimport apiID from './config.json'\n\nclass Source extends Component {\n\n    handleSelect = ({convert}) =>{\n        let hash = document.URL\n        hash = hash.substring(5).split(\"&\")[0].split(\"=\")[1];\n        this.props.addSpotifyToken(hash)\n        this.props.addSource(convert);\n        let id = Math.floor(Math.random()*100000);\n        if (convert == \"appleToSpotify\"){\n            this.props.addIDA2S(id)\n        }\n        else if (convert == \"spotifyToApple\"){\n            this.props.addID(id)\n        }\n        let music = window.MusicKit.configure({\n            developerToken:apiID.appleAuth,\n            app: {\n                name: 'Playlist Converter'\n            },\n            declarativeMarkup: true\n        });\n\n        music.authorize().then(musicUserToken=>{\n            console.log(musicUserToken);\n            let token = musicUserToken;\n            this.props.addAppleToken(token);\n\n        })\n\n    }\n\n    render(){\n\n        return(\n            <Form>\n                <div className=\"text-center\">\n                    <Form.Label\n                        className = \"title\">Choose Source and Destination</Form.Label>\n                    <br />\n                    <div className=\"radio-container\" >\n\n                        <ButtonGroup toggle className=\"mb-2\">\n                            <ToggleButton type=\"checkbox\" variant=\"dark\" onClick={this.handleSelect(\"appleToSpotify\")} >Apple Music to Spotify</ToggleButton>\n                            <ToggleButton type=\"checkbox\" variant=\"dark\" onClick={this.handleSelect(\"spotifyToApple\")} >Spotify to Apple Music</ToggleButton>\n                        </ButtonGroup>\n\n                    </div>\n                </div>\n            </Form>\n\n        )\n    }\n}\n\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        addSource: (source)=> {dispatch({type: 'ADD_SOURCE', payload:source})},\n        addID: (id) => {dispatch ({type: 'ADD_ID', payload:id})},\n        addIDA2S: (idA2S) => {dispatch ({type: 'ADD_IDA2S', payload:idA2S })},\n        addSpotifyToken: (hash) => {dispatch ({type: 'ADD_SPOTIFYTOKEN', payload: hash})},\n        addAppleToken: (token) => {dispatch ({type: 'ADD_APPLETOKEN', payload: token})}\n    }\n}\n\n\n\n\nexport default connect(null, mapDispatchToProps)(Source);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Button, Col, Row } from 'react-bootstrap';\n\nimport './style.css';\n\nclass Converter extends Component{\n    state = {\n        url: \" \",\n        playName: null,\n        link: null,\n        done: null,\n        valid: null\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const { appleToken } = this.props;\n        const { idA2S }=this.props\n        const { spotifyToken } = this.props;\n        let playName = this.state.playName\n        let playlistURL = this.state.url\n        let playlistURI;\n        const { id }=this.props\n        let theid\n        let getISRC;\n        let newPlay;\n        let isrcToken;\n        let convToken\n        const { source } = this.props;\n        const theSource = { source };\n\n        if ( theSource.source !== \"spotifyToApple\" && theSource.source !== \"appleToSpotify\"){\n            this.setState({\n                valid:\"Please choose a source.\"\n            })\n        }\n\n\n        if(playlistURL === \" \"){\n            this.setState({\n                done:\"Invalid ID\"\n            })\n            return false;\n        }\n        this.setState({\n            done:\"Converting...\",\n            link: \" \",\n            valid: null\n        })\n\n        let isrc = async function(){\n            const response = await fetch(getISRC,{\n                method: 'POST',\n                headers: {\n                    'Content-type': 'application/json'\n                },\n                body:JSON.stringify({\n                    'url': playlistURI,\n                    'authToken': isrcToken,\n                    'id': theid\n                })\n            })\n            return response.json()\n        }\n\n        let createPlaylist =  async()=>{\n            const response = await fetch(newPlay,{\n                method: 'POST',\n                headers: {\n                    'Content-type': 'application/json'\n                },\n                body:JSON.stringify({\n                    'createplaylist': playName,\n                    'authToken': convToken,\n                    'id':theid\n                })\n            })\n\n            const responseData = await response.json()\n            console.log(responseData)\n            this.setState({\n                done:responseData.done,\n                link:responseData.link\n            })\n\n        }\n\n        const createplaylist = async () => {\n            const sendAppleISRC = await isrc()\n            console.log(sendAppleISRC.done)\n            if (sendAppleISRC.done === 'done'){\n                createPlaylist()\n            }\n        }\n\n        if ( theSource.source === \"appleToSpotify\" ){\n\n            if (playlistURL.includes(\"us/playlist\")){\n                playlistURI = playlistURL.split(\"playlist/\")[1]\n                playlistURI=playlistURI.split(\"/\")[1]\n\n            }\n            else if (playlistURL.includes(\"/playlist\")){\n                playlistURI=playlistURL.split(\"playlist/\")[1]\n\n            }\n            else if (playlistURL.includes(\"p.\")){\n\n                playlistURI=playlistURL\n\n            }\n            else if (playlistURL.includes(\"pl.u\")){\n                playlistURI=playlistURL\n            }else {\n                this.setState({\n                    done:\"Invalid URL\",\n                    valid: null\n                })\n            }\n\n            getISRC = 'https://playlist-converter-server.herokuapp.com/getAppleISRC'\n            newPlay = 'https://playlist-converter-server.herokuapp.com/createSpotifyPlaylist'\n            isrcToken = { appleToken }\n            convToken = { spotifyToken }\n            theid = { idA2S }\n\n            createplaylist()\n        }\n\n        if ( theSource.source ===\"spotifyToApple\"){\n\n            if (playlistURL.includes(\"https://open\")){\n                playlistURI = playlistURL.split(\"?\")[0]\n                playlistURI=playlistURI.split(\"playlist/\")[1]\n            }\n            else if (playlistURL.includes(\"open.spotify\")){\n                playlistURI = playlistURL.split(\"playlist/\")[1]\n\n            }\n            else if (playlistURL.length === 22){\n                playlistURI=playlistURL\n            }else {\n                this.setState({\n                    done:\"Invalid URL\"\n                })\n            }\n\n            getISRC = 'https://playlist-converter-server.herokuapp.com/getSpotifyISRC'\n            newPlay = 'https://playlist-converter-server.herokuapp.com/createApplePlaylist'\n            isrcToken = { spotifyToken }\n            convToken = { appleToken }\n            theid = { id }\n\n            createplaylist()\n\n        }\n\n    }\n\n\n    render(){\n\n        return(\n\n            <Form>\n                <Form.Group>\n                    <div className = \"text-center\">\n                        <Row className=\"justify-content-md-center\">\n\n                            <Col xs={5} >\n                                <Form.Control  size = \"med\" type = \"text\" placeholder=\"Enter Playlist URL\" onChange={this.handleChange} id=\"url\" />\n                            </Col>\n                        </Row>\n                        <br />\n                        <Row className=\"justify-content-md-center\">\n                            <Col xs={3}>\n                                <Form.Control  size = \"med\" type = \"text\" placeholder = \"Enter Name of New Playlist\" onChange={this.handleChange} id=\"playName\"/>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Button variant=\"dark\" type=\"submit\" onClick={this.handleSubmit} className=\"convert\">Convert!</Button>\n                        <h1>{this.state.done}</h1>\n                        <a href = {this.state.link}>{this.state.link}</a>\n                        <h1>{this.state.valid}</h1>\n                        <p>Convert your favorite playlists to and from Apple Music and Spotify!</p>\n                        <p>Your playlist link will appear below the convert button when completed.</p>\n                        <p> Note: Due to Spotify's song limit per request, conversion caps at 100 songs</p>\n                        <p> Note: Spotify exclusives such as Spotify singles cannot be converted</p>\n                        <p> Note: If you are already logged into Apple Music on your browser, a popup to login to Apple Music may not appear</p>\n                    </div>\n                </Form.Group>\n            </Form>\n\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        appleToken: state.appleToken,\n        id: state.id,\n        spotifyToken: state.spotifyToken,\n        idA2S: state.idA2S,\n        source: state.source\n    }\n}\n\nexport default connect(mapStateToProps)(Converter);","import React, { Component } from 'react';\n\n\nclass Header extends Component {\n\n    render(){\n        return(\n\n            <div className=\"text-center\">\n                <div className=\"header\">\n                    <h1>Playlist Converter</h1>\n                </div>\n            </div>\n\n        )\n    }\n}\n\nexport default Header;","import React, { Component } from 'react';\n\n\nclass Footer extends Component {\n\n    render(){\n        return(\n\n            <footer>\n                <div className=\"footer\">\n                    <a href=\"mailto: alexoei13589@gmail.com\">Contact </a>\n                    <a href=\"https://github.com/AlexOei/playlist-converter-server\"> Github</a>\n\n                </div>\n\n\n\n            </footer>\n\n        )\n    }\n}\n\nexport default Footer;","import React, { Component } from 'react';\nimport Login from './Components/login';\nimport Source from './Components/source';\nimport Convert from './Components/convert';\nimport Header from './Components/header';\nimport Footer from './Components/footer'\n\n\n\n\n\nclass App extends Component {\n\n\n\n\n\n    render(){\n        return (\n            <div className=\"App\">\n                <link href=\"https://fonts.googleapis.com/css2?family=Quicksand:wght@700&display=swap\" rel=\"stylesheet\" />\n\n                <script src=\"https://js-cdn.music.apple.com/musickit/v1/musickit.js\"></script>\n                <Header />\n                <Login />\n                <div class=\"container-convert\">\n                    <Source />\n                    <Convert />\n                    <Footer />\n                </div>\n\n            </div>\n        );\n    }\n}\n\n\nexport default App;\n\n\n\n","const initState = {\n    appleToken: [],\n    spotifyToken: [],\n    id: [],\n    idA2S: [],\n    source:[]\n}\n\nconst rootReducer = (state = initState, action) => {\n    if (action.type === 'ADD_APPLETOKEN'){\n        return{\n            ...state,\n            appleToken: action.payload\n        }\n    }\n    if (action.type === 'ADD_SPOTIFYTOKEN'){\n        return{\n            ...state,\n            spotifyToken: action.payload\n        }\n    }\n    if (action.type === 'ADD_ID'){\n        return{\n            ...state,\n            id: action.payload\n        }\n    }\n    if (action.type === 'ADD_IDA2S'){\n        return{\n            ...state,\n            idA2S: action.payload\n        }\n    }\n    if (action.type === 'ADD_SOURCE'){\n        return{\n            ...state,\n            source: action.payload\n        }\n    }\n\n    return state;\n}\n\n\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './reducers/rootReducer';\n\nconst store = createStore(rootReducer);\n\nstore.subscribe(()=>{\n    console.log(store.getState());\n})\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store= {store} >\n            <App />\n        </Provider>\n    </React.StrictMode>, document.getElementById('root')\n);\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n\nexport default store"],"sourceRoot":""}